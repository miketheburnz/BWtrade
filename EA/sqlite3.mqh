//+------------------------------------------------------------------+
//|                                                     sqlite3.mqh  |
//|                        MetaTrader 5 Expert Advisor               |
//|                   Generated by ChatGPT - Example                 |
//+------------------------------------------------------------------+

#include <WinUser32.mqh>

// Define constants and variables
#define CONFIG_DB_PATH "logs\\config.db"
#define TRADES_DB_PATH "logs\\trades.db"

// Function prototypes
int  OpenDatabase(string db_path);
void CloseDatabase(int db);
int  ExecuteQuery(int db, string query);
int  FetchRow(int db);
void ShowMessage(string text);

// Configuration database functions
string GetConfigValue(string key);
int SetConfigValue(string key, string value);

// Trade database functions
int  LogTrade(string pair, double volume, double price, string action);
void FetchAllTrades();

//+------------------------------------------------------------------+
//| Open the SQLite database                                         |
//+------------------------------------------------------------------+
int OpenDatabase(string db_path) {
    int db = DatabaseOpen(db_path);
    if (db == INVALID_HANDLE) {
        ShowMessage("Failed to open database: " + db_path);
        return -1;
    }
    return db;
}

//+------------------------------------------------------------------+
//| Close the SQLite database                                        |
//+------------------------------------------------------------------+
void CloseDatabase(int db) {
    DatabaseClose(db);
}

//+------------------------------------------------------------------+
//| Execute an SQL query                                             |
//+------------------------------------------------------------------+
int ExecuteQuery(int db, string query) {
    int result = DatabaseExecute(db, query);
    if (result == false) {
        ShowMessage("Failed to execute query: " + query);
        return -1;
    }
    return 0;
}

//+------------------------------------------------------------------+
//| Fetch a row from the result set                                  |
//+------------------------------------------------------------------+
int FetchRow(int db) {
    int result = DatabaseNext(db);
    if (result == false) {
        ShowMessage("No more rows to fetch");
        return -1;
    }
    return 0;
}

//+------------------------------------------------------------------+
//| Show a message in the log                                        |
//+------------------------------------------------------------------+
void ShowMessage(string text) {
    Print(text);
}

//+------------------------------------------------------------------+
//| Get a configuration value from the config database               |
//+------------------------------------------------------------------+
string GetConfigValue(string key) {
    int db = OpenDatabase(CONFIG_DB_PATH);
    if (db == -1) return "";

    string query = "SELECT value FROM config WHERE key = '" + key + "'";
    if (ExecuteQuery(db, query) == -1) {
        CloseDatabase(db);
        return "";
    }

    string value = "";
    if (FetchRow(db) != -1) {
        value = DatabaseFieldAsString(db, 0);
    }

    CloseDatabase(db);
    return value;
}

//+------------------------------------------------------------------+
//| Set a configuration value in the config database                 |
//+------------------------------------------------------------------+
int SetConfigValue(string key, string value) {
    int db = OpenDatabase(CONFIG_DB_PATH);
    if (db == -1) return -1;

    string query = "INSERT OR REPLACE INTO config (key, value) VALUES ('" + key + "', '" + value + "')";
    int result = ExecuteQuery(db, query);
    CloseDatabase(db);
    return result;
}

//+------------------------------------------------------------------+
//| Log a trade in the trades database                               |
//+------------------------------------------------------------------+
int LogTrade(string pair, double volume, double price, string action) {
    int db = OpenDatabase(TRADES_DB_PATH);
    if (db == -1) return -1;

    string query = "INSERT INTO trades (pair, volume, price, action, timestamp) VALUES ('" + pair + "', " + DoubleToString(volume) + ", " + DoubleToString(price) + ", '" + action + "', '" + TimeToString(TimeCurrent(), TIME_DATE|TIME_MINUTES) + "')";
    int result = ExecuteQuery(db, query);
    CloseDatabase(db);
    return result;
}

//+------------------------------------------------------------------+
//| Fetch all trades from the trades database                        |
//+------------------------------------------------------------------+
void FetchAllTrades() {
    int db = OpenDatabase(TRADES_DB_PATH);
    if (db == -1) return;

    string query = "SELECT * FROM trades";
    if (ExecuteQuery(db, query) == -1) {
        CloseDatabase(db);
        return;
    }

    while (FetchRow(db) != -1) {
        string pair = DatabaseFieldAsString(db, 0);
        double volume = DatabaseFieldAsDouble(db, 1);
        double price = DatabaseFieldAsDouble(db, 2);
        string action = DatabaseFieldAsString(db, 3);
        string timestamp = DatabaseFieldAsString(db, 4);

        ShowMessage("Trade - Pair: " + pair + ", Volume: " + DoubleToString(volume) + ", Price: " + DoubleToString(price) + ", Action: " + action + ", Timestamp: " + timestamp);
    }

    CloseDatabase(db);
}
